/***************************************************************************************************
 * fmpurl ( user ; pass ; host ; file ; script ; param ; variables )
 *
 * RETURNS:
 *	url formatted for the current platform
 *
 * PARAMETERS:
 *	user = (optional) account name to use when opening file
 *	pass = (optional, unless user is not empty) password for user
 *	host = (required) IP address, DNS name,
 *			"~" or "local" or "documents",
 *			"$" or "open",
 *			"HostURL" (extract domain name from Get ( FilePath ))
 *	file = (required) name of database file
 *	script = (optional, unless param is not empty) script name to run
 *	param = (optional) parameter to send to script
 *	variables = (optional) encoded variable string: $var=value&$var2=value%20with%20spaces
 *		encode like this:
 *			"$var=" & GetAsURLEncoded ( "value" )
 *			& "&$var2=" & GetAsURLEncoded ( "value with spaces" )
 *
 * HISTORY:
 *	2017-JUL-31 Daniel Smith dan@filemaker.consulting
 *		- bug fix in testing system version: it incorrectly detected iOS 10 as < 9
 *		- don't URLEncoded user/pass
 *		- updated documentation to reflect that variable name does not need to be URLEncoded
 *	2016-MAR-31 Daniel Smith dan@filemaker.consulting
 *		- refactor to use Let instead of Case for main logic flow
 *		- error if variables but no script
 *		- return multi-line error message, listing all the errors
 *		- add support for HostURL value as host parameter
 *	2016-JAN-12 Daniel Smith dansmith65@gmail.com
 * 		- don't URL encode file name
 *	2016-JAN-08 Daniel Smith dansmith65@gmail.com
 *		- created
 *
 * REFERENCE:
 *	http://www.modularfilemaker.org/module/fmpurl/
 *	https://github.com/dansmith65/FileMaker-fmpurl
 **************************************************************************************************/

Let ( [
	url = "fmp://" ;

	/* USER AND PASS */
	errorMessage =
		If ( IsEmpty ( user ) and not IsEmpty ( pass ) ;
			"ERROR: user must not be empty if pass is provided"
		) ;
	url = url &
		If ( not IsEmpty ( user ) ;
			user
		)
		& If ( not IsEmpty ( user ) and not IsEmpty ( pass ) ;
			":" & pass
		)
		& If ( not IsEmpty ( user ) or not IsEmpty ( pass ) ;
			"@"
		) ;


	/* HOST */
	errorMessage = List ( errorMessage ; 
		If ( IsEmpty ( host ) ;
			"ERROR: host must not be empty"
		)
	) ;
	segment =
		Case (
			host = "~" or host = "local" or host = "documents" ;
			If ( Get ( SystemPlatform ) = 3 /* iOS */ and GetAsNumber ( Get ( SystemVersion ) ) < 9 ;
				"%7e" ; /* due to http://thefmkb.com/11358 */
				"~"
			) ;

			host = "$" or host = "open" ;
			If ( Get ( SystemPlatform ) = 3 /* iOS */ and GetAsNumber ( Get ( SystemVersion ) ) < 9 ;
				"%24" ; /* due to http://thefmkb.com/11358 */
				"$"
			) ;

			host = "HostURL" ;
			Let ( [
				filePath = Get ( FilePath ) ;
				start = Position ( filePath ; "/" ;1 ; 1 ) ;
				start = If ( start ; start + 1 ; start ) ;
				end = If ( start ;
					Position ( filePath ; "/" ; start ; 1 ) - 1 
				)
			] ;
				If ( start and Left ( filePath ; 7 ) = "fmnet:/" ;
					Middle ( filePath ; start ; end - start + 1 ) ;
					"ERROR: HostURL could not be extracted"
				)
			) ;

			/* else, use host param as-is */
			host
		) ;
	errorMessage = List ( errorMessage ; 
		If ( Left ( segment ; 5 ) = "ERROR" ;
			segment
		)
	) ;
	segment = segment & If ( Right ( segment ; 1 ) ≠ "/" ; "/" ) ;
	url = url & segment ;


	/* FILE */
	errorMessage = List ( errorMessage ; 
		If ( IsEmpty ( file ) ;
			"ERROR: file must not be empty"
		)
	) ;
	url = url & file ;


	/* SCRIPT */
	errorMessage = List ( errorMessage ; 
		If ( IsEmpty ( script ) and not IsEmpty ( param ) ;
			"ERROR: script must not be empty if param is provided"
		)
	) ;
	errorMessage = List ( errorMessage ; 
		If ( IsEmpty ( script ) and not IsEmpty ( variables ) ;
			"ERROR: script must not be empty if variables is provided"
		)
	) ;
	url = url &
		If ( not IsEmpty ( script ) ;
			"?script=" & GetAsURLEncoded ( script )
			
			/* PARAM*/
			& If ( not IsEmpty ( param ) ;
				"&param=" & GetAsURLEncoded ( param )
			)

			/* VARIABLES */
			& If ( not IsEmpty ( variables ) ;
				If ( Left ( variables ; 1 ) ≠ "&" ; "&" )
				& variables
			)
		)
] ;

	If ( not IsEmpty ( errorMessage ) ; errorMessage ; url )

)
